if getgenv().executed then
    return
end
getgenv().executed = true
repeat wait() until game:IsLoaded()
local queue_on_teleport = queue_on_teleport or syn.queue_on_teleport or fluxus.queue_on_teleport or function(...)
    return ...
end

game.Players.LocalPlayer.OnTeleport:Connect(function(State)
    if State == Enum.TeleportState.Started or Enum.TeleportState.InProgress then
        
            queue_on_teleport([[
                repeat wait() until game:IsLoaded()
                wait(2)
                if getgenv().executed then 
                    return 
                end
                getgenv().executed = true
                loadstring(game:HttpGet("https://raw.githubusercontent.com/TrilhaX/roghoul/main/main"))()
                ]])
    end
end)

warn('[TEMPEST HUB] Loading Bypass')
wait(1)
warn('[TEMPEST HUB] Loading Ui')
wait(1)
local repo = 'https://raw.githubusercontent.com/TrapstarKSSKSKSKKS/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
Library:Notify('Welcome to Tempest Hub', 5)

local Window = Library:CreateWindow({
    Title = 'Tempest Hub | Ro Ghoul',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

Library:Notify('Loading Ro Ghoul Script', 5)
warn('[TEMPEST HUB] Loading Function')
wait(1)
warn('[TEMPEST HUB] Loading Toggles')
wait(1)
warn('[TEMPEST HUB] Last Checking')
wait(1)

function GetCFrame(obj, height, angle)
    local cframe = CFrame.new()

    if typeof(obj) == "Vector3" then
        cframe = CFrame.new(obj)
    elseif typeof(obj) == "table" then
        cframe = CFrame.new(unpack(obj))
    elseif typeof(obj) == "string" then
        local parts = {}
        for val in obj:gmatch("[^,]+") do
            table.insert(parts, tonumber(val))
        end
        if #parts >= 3 then
            cframe = CFrame.new(unpack(parts))
        end
    elseif typeof(obj) == "Instance" then
        if obj:IsA("Model") then
            local rootPart = obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChild("Torso")
            if rootPart then
                cframe = rootPart.CFrame
            end
        elseif obj:IsA("Part") then
            cframe = obj.CFrame
        end
    end

    -- Apply height and angle adjustments
    if height then
        cframe = cframe + Vector3.new(0, height, 0)
    end
    if angle then
        cframe = cframe * CFrame.Angles(0, math.rad(angle), 0)
    end
    
    return cframe
end

function autoccg()
    while getgenv().autoccg == true do
            local args = {
                [1] = "CCG"
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Race"):WaitForChild("Chose"):InvokeServer(unpack(args))
            wait()
        end
    wait()
end


function autoghoul()
    while getgenv().autoghoul == true do
            local args = {
                [1] = "Ghoul"
            }
    
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Race"):WaitForChild("Chose"):InvokeServer(unpack(args))
            wait()
        end
    wait()
end

function killaura()
    while getgenv().killaura == true do
        while true do
            local player = game.Players.LocalPlayer
            local key 
            local trainers = nil
            
            while not key do
                for i,v in pairs(getgc(true)) do
                    if not key and type(v) == "function" and getinfo(v).source:find(".ClientControl") then
                        for i2,v2 in pairs(getconstants(v)) do
                            if v2 == "KeyEvent" then
                                local keyfound = getconstant(v, i2 + 1)
                                if #keyfound >= 100 then
                                    key = keyfound
                                    break
                                end
                            end
                        end
                    elseif type(v) == "table" then
                        for _, playerName in ipairs(v) do
                            if playerName == "(S1) Kureo Mado" or playerName == "(S1) Ken Kaneki" then
                                trainers = v
                                break
                            end
                        end
                    end
                    if key and trainers then
                        break
                    end
                end
                wait()
            end
            
            function pressKey(topress)
                player.Character.Remotes.KeyEvent:FireServer(key, topress, "Down", player:GetMouse().Hit, nil, workspace.Camera.CFrame)
                wait()
            end
            
            pressKey("Mouse1")
        wait()
        end
    end
end

function Autoskill()
    while getgenv().Autoskill == true do
        while true do
            local player = game.Players.LocalPlayer
            local key 
            local trainers = nil
            
            while not key do
                for i,v in pairs(getgc(true)) do
                    if not key and type(v) == "function" and getinfo(v).source:find(".ClientControl") then
                        for i2,v2 in pairs(getconstants(v)) do
                            if v2 == "KeyEvent" then
                                local keyfound = getconstant(v, i2 + 1)
                                if #keyfound >= 100 then
                                    key = keyfound
                                    break
                                end
                            end
                        end
                    elseif type(v) == "table" then
                        for _, playerName in ipairs(v) do
                            if playerName == "(S1) Kureo Mado" or playerName == "(S1) Ken Kaneki" then
                                trainers = v
                                break
                            end
                        end
                    end
                    if key and trainers then
                        break
                    end
                end
                wait()
            end
            
            function pressKey(topress)
                player.Character.Remotes.KeyEvent:FireServer(key, topress, "Down", player:GetMouse().Hit, nil, workspace.Camera.CFrame)
                wait()
            end
            
            pressKey("F")
            pressKey("E")
            pressKey("R")
        wait()
        end
    end
end

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

local positions = {"BL", "BR", "FL", "FR", "Gyakusatsu"}

function autogyakysatsuwhop()
    while getgenv().autogyakysatsuwhop == true do
        local npcSpawns = game.Workspace:FindFirstChild("NPCSpawns")
        if npcSpawns then
            local gyakusatsuSpawn = npcSpawns:FindFirstChild("GyakusatsuSpawn")
            if gyakusatsuSpawn then
                local targetCFrame = nil
                for _, position in ipairs(positions) do
                    local spawn = gyakusatsuSpawn:FindFirstChild(position)
                    if spawn then
                        targetCFrame = GetCFrame(spawn)
                        break
                    end
                end
                if targetCFrame then
                    tweenToPosition(targetCFrame)
                    wait()
                else
                    print("No spawn found! Teleporting...")
                    loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Server-hop-7401"))()
                    print("Teleported")
                    wait(5)
                end
            else
                print("GyakusatsuSpawn not found! Teleporting...")
                loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Server-hop-7401"))()
                print("Teleported")
                wait(5)
            end
        else
            warn("NPCSpawns not found! Waiting...")
            wait(5)
        end
    end
end

function autogyakysatsu()
    while getgenv().autogyakysatsu == true do
        local npcSpawns = game.Workspace:FindFirstChild("NPCSpawns")
        if npcSpawns then
            local gyakusatsuSpawn = npcSpawns:FindFirstChild("GyakusatsuSpawn")
            if gyakusatsuSpawn then
                local targetCFrame = nil
                for _, position in ipairs(positions) do
                    local spawn = gyakusatsuSpawn:FindFirstChild(position)
                    if spawn then
                        targetCFrame = GetCFrame(spawn)
                        break
                    end
                end
                if targetCFrame then
                    tweenToPosition(targetCFrame)
                    wait()
                else
                    print("No spawn found!")
                    wait()
                end
            else
                print("GyakusatsuSpawn not found!")
                wait()
            end
        else
            warn("NPCSpawns not found! Waiting...")
            wait()
        end
    end
end

function tweenToPosition(position)
    local character = Players.LocalPlayer.Character
    if not character then
        return
    end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then
        return
    end
    
    local tweenInfo = TweenInfo.new(
        0,
        Enum.EasingStyle.Linear,
        Enum.EasingDirection.InOut,
        0,
        false
    )
    
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = position})
    tween:Play()
    tween.Completed:Wait()  -- Aguarda até que a animação termine antes de prosseguir
end

-- Função para automatizar o treinamento
function autotrain()
    while getgenv().autotrain == true do -- Continua enquanto a variável global 'autotrain' for verdadeira
        local player = game.Players.LocalPlayer
        
        -- Desconecta qualquer conexão anterior
        local connection
        if connection and connection.Connected then
            connection:Disconnect()
        end
        
        local tkey
        local remotes = game.ReplicatedStorage.Remotes
        local trainers
        
        connection = player.Backpack.DescendantAdded:Connect(function(obj)
            if tostring(obj) == "TSCodeVal" and obj:IsA("StringValue") then
                tkey = obj.Value
            end
        end)
        
        local result = remotes.Trainers.RequestTraining:InvokeServer()
        
        if result == "TRAINING" then
            for i, v in pairs(workspace.TrainingSessions:GetChildren()) do
                if v.Player.Value == player then
                    remotes.Trainers.Comm:FireServer("Finished", tkey, false)
                    break
                end
            end
        elseif result == "TRAINING COMPLETE" then
            for i, v in pairs(player.PlayerFolder.Trainers:GetChildren()) do
                if table.find(trainers, v.Name) and v:FindFirstChild("Progress") and tonumber(v.Progress.Value) < 100 then
                    remotes.Trainers.ChangeTrainer:InvokeServer(v.Name)
                    wait(1.5)
                end
            end
        end
    end
end 


local selectedEnemie = nil

function autofarmhuman()
    while getgenv().autofarmhuman == true do
        local blacklist = {
            ["GyakusatsuSpawn"] = true,
            ["BossSpawns"] = true,
            ["AggroSpawns"] = true,
            ["CCGSpawns"] = true,
            ["GhoulSpawns"] = true,
        }
                        
        local Humans = workspace.NPCSpawns
        local children = Humans:GetChildren()
                    
        for _, child in ipairs(children) do
            if getgenv().autofarmhuman then
                if not blacklist[child.Name] then
                    local humanoidRootPart = child:FindFirstChild("HumanoidRootPart", true)
                    if humanoidRootPart and humanoidRootPart.Parent and humanoidRootPart.Parent:FindFirstChild("Humanoid") then
                        while humanoidRootPart.Parent:FindFirstChild("Humanoid") do
                            local targetCFrame = GetCFrame(humanoidRootPart)
                            tweenToPosition(targetCFrame)
                            wait()
                        end
                    end
                end
            else
                break
            end
        end
    end
end

function autofarminvestigators()
    while getgenv().autofarminvestigators do
        local blacklist = {
            ["GyakusatsuSpawn"] = true,
            ["BossSpawns"] = true,
            ["HumanSpawns"] = true,
            ["GhoulSpawns"] = true,
        }
                                      
        local Humans = workspace.NPCSpawns
        local children = Humans:GetChildren()
                    
        for _, child in ipairs(children) do
            if getgenv().autofarminvestigators then
                if not blacklist[child.Name] then
                    local humanoidRootPart = child:FindFirstChild("HumanoidRootPart", true)
                    if humanoidRootPart and humanoidRootPart.Parent and humanoidRootPart.Parent:FindFirstChild("Humanoid") then
                        while humanoidRootPart.Parent:FindFirstChild("Humanoid") do
                            local targetCFrame = GetCFrame(humanoidRootPart)
                            tweenToPosition(targetCFrame)
                            wait()
                        end
                    end
                end
            else
                wait()
            end
        end
    end
end

function autofarmAogiriMembers()
    while getgenv().autofarmAogiriMembers do
        local blacklist = {
            ["GyakusatsuSpawn"] = true,
            ["BossSpawns"] = true,
            ["HumanSpawns"] = true,
            ["AggroSpawns"] = true,
            ["CCGSpawns"] = true,
        }
                        
        local Humans = workspace.NPCSpawns
        local children = Humans:GetChildren()
                    
        for _, child in ipairs(children) do
            if getgenv().autofarmAogiriMembers then
                if not blacklist[child.Name] then
                    local humanoidRootPart = child:FindFirstChild("HumanoidRootPart", true)
                    if humanoidRootPart and humanoidRootPart.Parent and humanoidRootPart.Parent:FindFirstChild("Humanoid") then
                        while humanoidRootPart.Parent:FindFirstChild("Humanoid") do
                            local targetCFrame = GetCFrame(humanoidRootPart)
                            tweenToPosition(targetCFrame)
                            wait()
                        end
                    end
                end
            else
                break
            end
        end
    end
end

function autofarmboss()
    while getgenv().autofarmboss do
        local blacklist = {
            ["GyakusatsuSpawn"] = true,
            ["AggroSpawns"] = true,
            ["CCGSpawns"] = true,
            ["GhoulSpawns"] = true,
            ["HumanSpawns"] = true,
        }
                
        local Spawns = workspace.NPCSpawns
        local children = Spawns:GetChildren()
            
        for _, child in ipairs(children) do
            if getgenv().autofarmboss then
                if not blacklist[child.Name] then
                    local humanoidRootPart = child:FindFirstChild("HumanoidRootPart", true)
                    if humanoidRootPart and humanoidRootPart.Parent and humanoidRootPart.Parent:FindFirstChild("Humanoid") then
                        while humanoidRootPart.Parent:FindFirstChild("Humanoid") do
                            local targetCFrame = GetCFrame(humanoidRootPart)
                            tweenToPosition(targetCFrame)
                            wait()
                        end
                    end
                end
            else
                break
            end
        end
    end
end


function webhook()
    while getgenv().webhook == true do
        local discordWebhookUrl = urlwebhook

        local yen = ""
        local rc = ""
        local rp = ""
        local TotalFoucusPoints = ""
        local level = ""
        local Focus = ""
        local EtoYoshimuraKills = ""
        local KoutarouAmonKills = ""
        local NishikiNishioKills = ""
        local ToukaKirishimaKills = ""
        local GyaSacs = ""
        local Experience = ""
        local ExpTime2x = ""
        local Durability = ""
        local name = game.Players.LocalPlayer
        
        if playerFolderStats then
            local Stats = playerFolderStats:FindFirstChild("Stats") 
            if Stats then
                yen = Stats.Yen.Value
            end
        
            local Stats = playerFolderStats:FindFirstChild("Stats") 
                if Stats then
                    rc = Stats.RC.Value
            end
        
            local Stats = playerFolderStats:FindFirstChild("Stats") 
                if Stats then
                    rp = Stats.Reputation.Value
            end
        
            local Stats = playerFolderStats:FindFirstChild("Stats") 
                if Stats then
                    TotalFoucusPoints = Stats.TotalFocusPoints.Value
            end
        
            local Stats = playerFolderStats:FindFirstChild("Stats") 
                if Stats then
                    level = Stats.Level.Value
            end
        
            local Stats = playerFolderStats:FindFirstChild("Stats") 
                if Stats then
                    Focus = Stats.Focus.Value
            end
        
            local playerFolderBossKills = playerFolderStats:FindFirstChild("BossKills")
            if playerFolderBossKills then
                if playerFolderBossKills:FindFirstChild("Eto Yoshimura") then
                    EtoYoshimuraKills = playerFolderBossKills["Eto Yoshimura"].Value
                end
        
                if playerFolderBossKills:FindFirstChild("Koutarou Amon") then
                    KoutarouAmonKills = playerFolderBossKills["Koutarou Amon"].Value
                end
        
                if playerFolderBossKills:FindFirstChild("Nishiki Nishio") then
                    NishikiNishioKills = playerFolderBossKills["Nishiki Nishio"].Value
                end
        
                if playerFolderBossKills:FindFirstChild("Touka Kirishima") then
                    ToukaKirishimaKills = playerFolderBossKills["Touka Kirishima"].Value
                end
            end
        
            if playerFolderStats:FindFirstChild("Inventory") then
                if playerFolderStats.Inventory:FindFirstChild("GyaSacs") then
                    GyaSacs = playerFolderStats.Inventory.GyaSacs.Value
                end
            end
        
            local Stats = playerFolderStats:FindFirstChild("Stats") 
                if Stats then
                    Experience = Stats.Experience.Value
            end
        
            local Stats = playerFolderStats:FindFirstChild("Stats") 
                if Stats then
                    ExpTime2x = Stats["2xExpTime"].Value
            end
        
            local Stats = playerFolderStats:FindFirstChild("Stats") 
                if Stats then
                    Durability = Stats.Durability.Value
            end
        end

        -- Construindo o payload para enviar para o webhook
        local payload = {
            content = "Tempest Hub",
            embeds = {
                {
                    title = "Account Situation",
                    description = string.format("Name: %s\nLevel: %s\nYen: %s\nRC: %s\nReputation: %s\nTotal Focus Point: %s\nFocus: %s\nEto Yoshimura KIlls: %s\nKoutarou Amon Kills: %s\nNishiki Nishio Kills: %s\nTouka Kirishima Kills: %s\nGya Sacs: %s\nExperience: %s\n2x Exp Time: %s\nDurability: %s\n\n------------------------------------", name, level, yen, rc, rp, TotalFocusPoints, Focus, EtoYoshimuraKills, KoutarouAmonKills, NishikiNishioKills, ToukaKirishimaKills, GyaSacs, Experience, ExpTime2x, Durability),
                    color = 10098630,
                    fields = {
                        {
                            name = "Discord",
                            value = "https://discord.gg/tvQqnYKF7j"
                        }
                    },
                    author = {
                        name = "Ro Ghoul"
                    },
                    image = {
                        url = "https://cdn.discordapp.com/attachments/1060039153494007900/1234607717549740062/Imagem_do_WhatsApp_de_2024-04-22_as_22.38.07_6779880f.jpg?ex=6632ab09&is=66315989&hm=a8e2e1b059838b45701b6959ba8e257413b2a099ef79a8c6bba056669a9f8c4b&"
                    },
                    thumbnail = {
                        url = "https://tr.rbxcdn.com/2a201e67272f350e2478d8fdf1c4d9af/150/150/Image/Webp"
                    }
                }
            }
        }

        -- Convertendo a tabela para JSON
        local payloadJson = game:GetService("HttpService"):JSONEncode(payload)

        -- Enviando a requisição POST para o webhook do Discord
        local response = syn.request({
            Url = discordWebhookUrl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = payloadJson
        })

        if response.Success then
            print("A")
        else
            warn("Erro ao enviar mensagem para o Discord:", response.StatusCode, response.Body)
        end
        wait(delaywebhook)
    end
end



local blacklist = {
    ["GyakusatsuSpawn"] = true,
}

local printedNames = {} -- Lista para rastrear os nomes já impressos
local ValuesMobs = {}

local Spawns = workspace.NPCSpawns
local children = Spawns:GetChildren()

for _, child in ipairs(children) do
    if not blacklist[child.Name] then
        local npc = child
        local children2 = npc:GetChildren()
        for _, child2 in ipairs(children2) do
            -- Verificar se o nome já foi impresso antes de imprimir
            if not printedNames[child2.Name] then
                table.insert(ValuesMobs, child2.Name)
                printedNames[child2.Name] = true -- Marcar o nome como impresso
            end
        end
    end
end


coroutine.wrap(autogyakysatsuwhop)()
coroutine.wrap(autogyakysatsu)()

local Tabs = {
    Main = Window:AddTab('Main'),
}

local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Player')

LeftGroupBox:AddToggle('AutoCCG', {
    Text = 'Auto CCG',
    Default = false,
    Callback = function(Value)
        getgenv().autoccg = Value
        autoccg()
    end
})

LeftGroupBox:AddToggle('autoghoul', {
    Text = 'Auto Ghoul',
    Default = false,
    Callback = function(Value)
        getgenv().autoghoul = Value
        autoghoul()
    end
})

LeftGroupBox:AddToggle('KillAura', {
    Text = 'Kill Aura',
    Default = false,
    Callback = function(Value)
        getgenv().killaura = Value
        killaura()
    end
})

LeftGroupBox:AddToggle('AutoSkill', {
    Text = 'Auto Skill',
    Default = false,
    Callback = function(Value)
        getgenv().Autoskill = Value
        Autoskill()
    end
})

LeftGroupBox:AddToggle('AutoTrain', {
    Text = 'Auto Trainer',
    Default = false,
    Callback = function(Value)
        getgenv().autotrain = Value
        autotrain()
    end
})

local RightGroupBox = Tabs.Main:AddRightGroupbox('Farm')

RightGroupBox:AddToggle('AutoFarm', {
    Text = 'Auto Farm Humans',
    Default = false,
    Callback = function(Value)
        getgenv().autofarmhuman = Value
        if Value then
            autofarmhuman() -- Iniciar o autofarm apenas se estiver ativado
        end
    end
})

RightGroupBox:AddToggle('AutoFarm', {
    Text = 'Auto Farm Investigators',
    Default = false,
    Callback = function(Value)
        getgenv().autofarminvestigators = Value
        if Value then
            autofarminvestigators() -- Iniciar o autofarm apenas se estiver ativado
        end
    end
})

RightGroupBox:AddToggle('AutoFarm', {
    Text = 'Auto Farm Aogiri Members',
    Default = false,
    Callback = function(Value)
        getgenv().autofarmAogiriMembers = Value
        if Value then
            autofarmAogiriMembers() -- Iniciar o autofarm apenas se estiver ativado
        end
    end
})

RightGroupBox:AddToggle('AutoFarmBoss', {
    Text = 'Auto Farm Boss',
    Default = false,
    Callback = function(Value)
        getgenv().autofarmboss = Value
        if Value then
            autofarmboss()
        end
    end
})

RightGroupBox:AddToggle('AutoGyakusatsu', {
    Text = 'Auto Gyakusatsu',
    Default = false,
    Callback = function(Value)
        getgenv().autogyakysatsu = Value
        autogyakysatsu()
    end
})

RightGroupBox:AddToggle('AutoGyakusatsuWHop', {
    Text = 'Auto Gyakusatsu(With ServerHop)',
    Default = false,
    Callback = function(Value)
        getgenv().autogyakysatsuwhop = Value
        autogyakysatsuwhopwhop()
    end
})

local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Stats')

local playerFolderStats = game:GetService("Players").LocalPlayer:FindFirstChild("PlayerFolder")

local yen = ""
local rc = ""
local rp = ""
local TotalFoucusPoints = ""
local level = ""
local Focus = ""
local EtoYoshimuraKills = ""
local KoutarouAmonKills = ""
local NishikiNishioKills = ""
local ToukaKirishimaKills = ""
local GyaSacs = ""
local Experience = ""
local ExpTime2x = ""
local Durability = ""

if playerFolderStats then
    local Stats = playerFolderStats:FindFirstChild("Stats") 
    if Stats then
        yen = Stats.Yen.Value
    end

    local Stats = playerFolderStats:FindFirstChild("Stats") 
        if Stats then
            rc = Stats.RC.Value
    end

    local Stats = playerFolderStats:FindFirstChild("Stats") 
        if Stats then
            rp = Stats.Reputation.Value
    end

    local Stats = playerFolderStats:FindFirstChild("Stats") 
        if Stats then
            TotalFoucusPoints = Stats.TotalFocusPoints.Value
    end

    local Stats = playerFolderStats:FindFirstChild("Stats") 
        if Stats then
            level = Stats.Level.Value
    end

    local Stats = playerFolderStats:FindFirstChild("Stats") 
        if Stats then
            Focus = Stats.Focus.Value
    end

    local playerFolderBossKills = playerFolderStats:FindFirstChild("BossKills")
    if playerFolderBossKills then
        if playerFolderBossKills:FindFirstChild("Eto Yoshimura") then
            EtoYoshimuraKills = playerFolderBossKills["Eto Yoshimura"].Value
        end

        if playerFolderBossKills:FindFirstChild("Koutarou Amon") then
            KoutarouAmonKills = playerFolderBossKills["Koutarou Amon"].Value
        end

        if playerFolderBossKills:FindFirstChild("Nishiki Nishio") then
            NishikiNishioKills = playerFolderBossKills["Nishiki Nishio"].Value
        end

        if playerFolderBossKills:FindFirstChild("Touka Kirishima") then
            ToukaKirishimaKills = playerFolderBossKills["Touka Kirishima"].Value
        end
    end

    if playerFolderStats:FindFirstChild("Inventory") then
        if playerFolderStats.Inventory:FindFirstChild("GyaSacs") then
            GyaSacs = playerFolderStats.Inventory.GyaSacs.Value
        end
    end

    local Stats = playerFolderStats:FindFirstChild("Stats") 
        if Stats then
            Experience = Stats.Experience.Value
    end

    local Stats = playerFolderStats:FindFirstChild("Stats") 
        if Stats then
            ExpTime2x = Stats["2xExpTime"].Value
    end

    local Stats = playerFolderStats:FindFirstChild("Stats") 
        if Stats then
            Durability = Stats.Durability.Value
    end
end

LeftGroupBox:AddLabel("Yen: " .. yen, true)
LeftGroupBox:AddLabel("RC: " .. rc, true)
LeftGroupBox:AddLabel("Reputation: " .. rp, true)
LeftGroupBox:AddLabel("Total Focus Points: " .. TotalFoucusPoints, true)
LeftGroupBox:AddLabel("Level: " .. level, true)
LeftGroupBox:AddLabel("Focus: " .. Focus, true)
LeftGroupBox:AddLabel("Eto Yoshimura Kills: " .. EtoYoshimuraKills, true)
LeftGroupBox:AddLabel("Koutarou Amon Kills: " .. KoutarouAmonKills, true)
LeftGroupBox:AddLabel("Nishiki Nishio Kills: " .. NishikiNishioKills, true)
LeftGroupBox:AddLabel("Touka Kirishima Kills: " .. ToukaKirishimaKills, true)
LeftGroupBox:AddLabel("Gya Sacs: " .. GyaSacs, true)
LeftGroupBox:AddLabel("Experience: " .. Experience, true)
LeftGroupBox:AddLabel("2x Exp Time: " .. ExpTime2x, true)
LeftGroupBox:AddLabel("Durability: " .. Durability, true)


local RightGroupBox = Tabs.Main:AddRightGroupbox('WebHook')

RightGroupBox:AddInput('LinkWebhook', {
    Default = '',
    Numeric = false, -- true / false, only allows numbers
    Finished = false, -- true / false, only calls callback when you press enter

    Text = 'WebHook Link',
    Tooltip = 'Press Enter To Save', -- Information shown when you hover over the textbox

    Placeholder = 'Enter Webhook', -- placeholder text when the box is empty
    -- MaxLength is also an option which is the max length of the text
    Callback = function(Value)
        urlwebhook = Value
    end
})

RightGroupBox:AddSlider('SpamWebhook', {
    Text = 'Delay Webhook',
    Default = 0,
    Min = 0,
    Max = 10,
    Rounding = 1,
    Compact = false,

    Callback = function(Value)
        delaywebhook = Value
    end
})

RightGroupBox:AddToggle('Webhook', {
    Text = 'Send Webhook',
    Default = false,
    Callback = function(Value)
        getgenv().webhook = Value
        if Value then
            webhook()
        end
    end
})


local FrameTimer = tick()
local FrameCounter = 0
local FPS = 60

local WatermarkConnection

-- Create a function to update FPS and ping information
local function UpdateWatermark()
    FrameCounter = FrameCounter + 1

    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter
        FrameTimer = tick()
        FrameCounter = 0
    end

    Library:SetWatermark(('Tempest Hub | %s fps | %s ms'):format(
        math.floor(FPS),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
    ))
end

-- Connect the function to the RenderStepped event
WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(UpdateWatermark)

-- Create tabs for UI settings
local TabsUI = {
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

-- Unload function
local function Unload()
    WatermarkConnection:Disconnect()
    print('Unloaded!')
    Library.Unloaded = true
end

-- UI Settings
local MenuGroup = TabsUI['UI Settings']:AddLeftGroupbox('Menu')

-- Add an unload button
MenuGroup:AddButton('Unload', Unload)

-- Add a label and key picker for the menu keybind
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' })

-- Define the ToggleKeybind variable
Library.ToggleKeybind = Options.MenuKeybind

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

ThemeManager:SetFolder('Tempest Hub')
SaveManager:SetFolder('Tempest Hub/_Ro_Ghoul')

SaveManager:BuildConfigSection(TabsUI['UI Settings'])

ThemeManager:ApplyToTab(TabsUI['UI Settings'])

SaveManager:LoadAutoloadConfig()

local GameConfigName = '_Ro_Ghoul'
local player = game.Players.LocalPlayer
SaveManager:Load(player.Name .. GameConfigName)
spawn(function()
    while task.wait(1) do
        if Library.Unloaded then
            break
        end
        SaveManager:Save(player.Name .. GameConfigName)
    end
end)

-- Disable player idling
for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
    v:Disable()
end
warn('[TEMPEST HUB] Loaded')
