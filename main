warn('[TEMPEST HUB] Loading Bypass')
wait(1)
warn('[TEMPEST HUB] Loading Ui')
wait(1)
local repo = 'https://raw.githubusercontent.com/TrapstarKSSKSKSKKS/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
Library:Notify('Welcome to Tempest Hub', 5)

local Window = Library:CreateWindow({
    Title = 'Tempest Hub | Ro Ghoul',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

Library:Notify('Loading Ro Ghoul Script', 5)
warn('[TEMPEST HUB] Loading Function')
wait(1)
warn('[TEMPEST HUB] Loading Toggles')
wait(1)
warn('[TEMPEST HUB] Last Checking')
wait(1)

function GetCFrame(obj, height, angle)
    local cframe = CFrame.new()

    if typeof(obj) == "Vector3" then
        cframe = CFrame.new(obj)
    elseif typeof(obj) == "table" then
        cframe = CFrame.new(unpack(obj))
    elseif typeof(obj) == "string" then
        local parts = {}
        for val in obj:gmatch("[^,]+") do
            table.insert(parts, tonumber(val))
        end
        if #parts >= 3 then
            cframe = CFrame.new(unpack(parts))
        end
    elseif typeof(obj) == "Instance" then
        if obj:IsA("Model") then
            local rootPart = obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChild("Torso")
            if rootPart then
                cframe = rootPart.CFrame
            end
        elseif obj:IsA("Part") then
            cframe = obj.CFrame
        end
    end

    -- Apply height and angle adjustments
    if height then
        cframe = cframe + Vector3.new(0, height, 0)
    end
    if angle then
        cframe = cframe * CFrame.Angles(0, math.rad(angle), 0)
    end
    
    return cframe
end

function autoccg()
    while getgenv().autoccg == true do
            local args = {
                [1] = "CCG"
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Race"):WaitForChild("Chose"):InvokeServer(unpack(args))
            wait()
        end
    wait()
end


function autoghoul()
    while getgenv().autoghoul == true do
            local args = {
                [1] = "Ghoul"
            }
    
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Race"):WaitForChild("Chose"):InvokeServer(unpack(args))
            wait()
        end
    wait()
end

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

local positions = {"BL", "BR", "FL", "FR", "Gyakusatsu"}

function autogyakysatsu()
    while getgenv().autogyakysatsu == true do
        local npcSpawns = game.Workspace:FindFirstChild("NPCSpawns")
        if npcSpawns then
            wait()
            local gyakusatsuSpawn = npcSpawns:FindFirstChild("GyakusatsuSpawn")
            if gyakusatsuSpawn then
                local targetCFrame = nil
                for _, position in ipairs(positions) do
                    local spawn = gyakusatsuSpawn:FindFirstChild(position)
                    if spawn then
                        targetCFrame = GetCFrame(spawn)
                        break
                    end
                end
                if targetCFrame then
                    tweenToPosition(targetCFrame)
                    function getNil(name,class) for _,v in next, getnilinstances()do if v.ClassName==class and v.Name==name then return v;end end end

                    local args = {
                        [1] = "\230\147\141\228\189\160\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146" ..
                        "\166\230\147\141\228\189\160\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145" ..
                        "\140\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146\166" ..
                        "\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146\148\240\159\141\145\240\159" ..
                        "\145\140\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140",
                        [2] = "Mouse1",
                        [3] = "Up",
                        [4] = CFrame.new(-518.6259765625, 79.89118194580078, 307.98248291015625, -0.6046967506408691, -0.41064175963401794, 0.6824333667755127, -1.4901162970204496e-08, 0.8568377494812012, 0.5155863165855408, -0.7964559197425842, 0.3117733597755432, -0.518126904964447),
                        [6] = CFrame.new(-515.169189453125, 82.50279998779297, 305.3580322265625, -0.9902395606040955, -0.05592380091547966, 0.1276642084121704, 3.725290298461914e-09, 0.9159709215164185, 0.4012446105480194, -0.13937583565711975, 0.39732828736305237, -0.9070306420326233),
                        [7] = Vector3.new(-520, 64.71410369873047, 342.0138244628906)
                    }

                    getNil("TempestGpo2", "Model"):WaitForChild("Remotes"):WaitForChild("KeyEvent"):FireServer(unpack(args))
                    wait()
                else
                    print("No spawn found!")
                    print("Teleporting")
                    loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Server-hop-7401"))()
                    print("Teleported")
                    wait(5)
                    wait(5)
                end
            else
                print("GyakusatsuSpawn not found!")
                print("Teleporting")
                loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Server-hop-7401"))()
                print("Teleported")
                wait(5)
                wait(5)
            end
        else
            warn("NPCSpawns not found!")
            wait(5)
        end
    end
end

function tweenToPosition(position)
    local character = Players.LocalPlayer.Character
    if not character then
        return
    end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then
        return
    end
    
    local tweenInfo = TweenInfo.new(
        1,
        Enum.EasingStyle.Linear,
        Enum.EasingDirection.InOut,
        0,
        false
    )
    
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = position})
    tween:Play()
    tween.Completed:Wait()  -- Aguarda até que a animação termine antes de prosseguir
end

coroutine.wrap(autogyakysatsu)()

local Tabs = {
    Main = Window:AddTab('Main'),
}

local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Player')

LeftGroupBox:AddToggle('AutoCCG', {
    Text = 'Auto CCG',
    Default = false,
    Callback = function(Value)
        getgenv().autoccg = Value
        autoccg()
    end
})

LeftGroupBox:AddToggle('autoghoul', {
    Text = 'Auto Ghoul',
    Default = false,
    Callback = function(Value)
        getgenv().autoghoul = Value
        autoghoul()
    end
})

LeftGroupBox:AddToggle('AutoGyakusatsu', {
    Text = 'Auto Gyakusatsu With Server Hop',
    Default = false,
    Callback = function(Value)
        getgenv().autogyakysatsu = Value
        autogyakysatsu()
    end
})


local FrameTimer = tick()
local FrameCounter = 0
local FPS = 60

local WatermarkConnection

-- Create a function to update FPS and ping information
local function UpdateWatermark()
    FrameCounter = FrameCounter + 1

    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter
        FrameTimer = tick()
        FrameCounter = 0
    end

    Library:SetWatermark(('Tempest Hub | %s fps | %s ms'):format(
        math.floor(FPS),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
    ))
end

-- Connect the function to the RenderStepped event
WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(UpdateWatermark)

-- Create tabs for UI settings
local TabsUI = {
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

-- Unload function
local function Unload()
    WatermarkConnection:Disconnect()
    print('Unloaded!')
    Library.Unloaded = true
end

-- UI Settings
local MenuGroup = TabsUI['UI Settings']:AddLeftGroupbox('Menu')

-- Add an unload button
MenuGroup:AddButton('Unload', Unload)

-- Add a label and key picker for the menu keybind
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' })

-- Define the ToggleKeybind variable
Library.ToggleKeybind = Options.MenuKeybind

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

ThemeManager:SetFolder('Tempest Hub')
SaveManager:SetFolder('Tempest Hub/_Ro_Ghoul')

SaveManager:BuildConfigSection(TabsUI['UI Settings'])

ThemeManager:ApplyToTab(TabsUI['UI Settings'])

SaveManager:LoadAutoloadConfig()

local GameConfigName = '_Ro_Ghoul'
local player = game.Players.LocalPlayer
SaveManager:Load(player.Name .. GameConfigName)
spawn(function()
    while task.wait(1) do
        if Library.Unloaded then
            break
        end
        SaveManager:Save(player.Name .. GameConfigName)
    end
end)

-- Disable player idling
for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
    v:Disable()
end
warn('[TEMPEST HUB] Loaded')
